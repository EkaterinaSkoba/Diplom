import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import { getEventInviteLink, removeParticipant, assignNewOrganizer } from '../../../../services/eventService';
import './TabStyles.css';
import {UUID} from "node:crypto";
import {useTelegramAuth} from "../../../../context/TelegramAuthContext";

const ParticipantsTab = ({ event }) => {
  const eventId = useParams() as unknown as UUID;
  const [participants, setParticipants] = useState(event.participants || []);
  const { user } = useTelegramAuth();

  const handleRemoveParticipant = async (participantId) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞?')) {
      const success = await removeParticipant(user.id, eventId, participantId);
      if (success) {
        setParticipants(prevParticipants => 
          prevParticipants.filter(p => p !== participantId)
        );
      }
    }
  };

  const handleAssignOrganizer = async (participantId) => {
    if (window.confirm('–ù–∞–∑–Ω–∞—á–∏—Ç—å —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º? –í—ã –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º, –Ω–æ –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –ø—Ä–∞–≤–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.')) {
      const success = await assignNewOrganizer(user.id, eventId, participantId);
      if (success) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        window.location.reload();
      }
    }
  };

  const copyInviteLink = () => {
    const link = getEventInviteLink(eventId);
    navigator.clipboard.writeText(link)
      .then(() => {
        alert('–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
      })
      .catch(err => {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É: ', err);
      });
  };

  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–æ –±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
  const getParticipantName = (participantId) => {
    if (participantId === 'currentUser') {
      return '–í—ã';
    }
    return `–£—á–∞—Å—Ç–Ω–∏–∫ ${participantId.substring(0, 5)}`;
  };

  const isOrganizer = event.organizer === 'currentUser';

  return (
    <div className="tab-container">
      <div className="tab-header">
        <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏</h2>
      </div>

      <div className="table-container participants-table">
        <table>
          <thead>
            <tr>
              <th>–£—á–∞—Å—Ç–Ω–∏–∫</th>
              <th>–†–æ–ª—å</th>
              {isOrganizer && <th>–î–µ–π—Å—Ç–≤–∏—è</th>}
            </tr>
          </thead>
          <tbody>
            {participants.map((participantId, index) => {
              const isCurrentOrganizer = participantId === event.organizer;
              return (
                <tr key={participantId}>
                  <td className="participant-name">
                    <div>{index + 1}. {getParticipantName(participantId)}</div>
                  </td>
                  <td>{isCurrentOrganizer ? '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä' : '–£—á–∞—Å—Ç–Ω–∏–∫'}</td>
                  {isOrganizer && (
                    <td className="actions-cell">
                      {participantId !== 'currentUser' && (
                        <>
                          {!isCurrentOrganizer && (
                            <button 
                              className="action-button"
                              onClick={() => handleAssignOrganizer(participantId)}
                              title="–ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º"
                            >
                              üëë
                            </button>
                          )}
                          <button 
                            className="action-button delete"
                            onClick={() => handleRemoveParticipant(participantId)}
                            title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                          >
                            ‚úï
                          </button>
                        </>
                      )}
                    </td>
                  )}
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>

      <div className="invite-section">
        <h3>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h3>
        <p>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.</p>
        
        <div className="invite-link-container">
          <input 
            type="text" 
            className="invite-link-input" 
            value={getEventInviteLink(eventId)} 
            readOnly 
          />
          <button className="button" onClick={copyInviteLink}>
            –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
};

export default ParticipantsTab; 